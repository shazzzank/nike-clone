{"ast":null,"code":"import { escapeUri } from \"@smithy/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({\n  query = {}\n}) => {\n  const keys = [];\n  const serialized = {};\n  for (const key of Object.keys(query).sort()) {\n    if (key.toLowerCase() === SIGNATURE_HEADER) {\n      continue;\n    }\n    keys.push(key);\n    const value = query[key];\n    if (typeof value === \"string\") {\n      serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n    } else if (Array.isArray(value)) {\n      serialized[key] = value.slice(0).reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), []).sort().join(\"&\");\n    }\n  }\n  return keys.map(key => serialized[key]).filter(serialized => serialized).join(\"&\");\n};","map":{"version":3,"names":["escapeUri","SIGNATURE_HEADER","getCanonicalQuery","query","keys","serialized","key","Object","sort","toLowerCase","push","value","Array","isArray","slice","reduce","encoded","concat","join","map","filter"],"sources":["/Users/shashanktayal/Projects/bigass/frontend/node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js"],"sourcesContent":["import { escapeUri } from \"@smithy/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\n                .sort()\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,yBAAyB;AACnD,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,KAAK,GAAG,CAAC;AAAE,CAAC,KAAK;EACjD,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,UAAU,GAAG,CAAC,CAAC;EACrB,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACH,IAAI,CAACD,KAAK,CAAC,CAACK,IAAI,CAAC,CAAC,EAAE;IACzC,IAAIF,GAAG,CAACG,WAAW,CAAC,CAAC,KAAKR,gBAAgB,EAAE;MACxC;IACJ;IACAG,IAAI,CAACM,IAAI,CAACJ,GAAG,CAAC;IACd,MAAMK,KAAK,GAAGR,KAAK,CAACG,GAAG,CAAC;IACxB,IAAI,OAAOK,KAAK,KAAK,QAAQ,EAAE;MAC3BN,UAAU,CAACC,GAAG,CAAC,GAAI,GAAEN,SAAS,CAACM,GAAG,CAAE,IAAGN,SAAS,CAACW,KAAK,CAAE,EAAC;IAC7D,CAAC,MACI,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MAC3BN,UAAU,CAACC,GAAG,CAAC,GAAGK,KAAK,CAClBG,KAAK,CAAC,CAAC,CAAC,CACRC,MAAM,CAAC,CAACC,OAAO,EAAEL,KAAK,KAAKK,OAAO,CAACC,MAAM,CAAC,CAAE,GAAEjB,SAAS,CAACM,GAAG,CAAE,IAAGN,SAAS,CAACW,KAAK,CAAE,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CACzFH,IAAI,CAAC,CAAC,CACNU,IAAI,CAAC,GAAG,CAAC;IAClB;EACJ;EACA,OAAOd,IAAI,CACNe,GAAG,CAAEb,GAAG,IAAKD,UAAU,CAACC,GAAG,CAAC,CAAC,CAC7Bc,MAAM,CAAEf,UAAU,IAAKA,UAAU,CAAC,CAClCa,IAAI,CAAC,GAAG,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}