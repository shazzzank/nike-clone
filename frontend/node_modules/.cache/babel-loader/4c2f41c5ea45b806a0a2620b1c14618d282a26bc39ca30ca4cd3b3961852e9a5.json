{"ast":null,"code":"import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nconst asPartial = t => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n  const extensionConfiguration = {\n    ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n    ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n    ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig))\n  };\n  extensions.forEach(extension => extension.configure(extensionConfiguration));\n  return {\n    ...runtimeConfig,\n    ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n    ...resolveDefaultRuntimeConfig(extensionConfiguration),\n    ...resolveHttpHandlerRuntimeConfig(extensionConfiguration)\n  };\n};","map":{"version":3,"names":["getAwsRegionExtensionConfiguration","resolveAwsRegionExtensionConfiguration","getHttpHandlerExtensionConfiguration","resolveHttpHandlerRuntimeConfig","getDefaultExtensionConfiguration","resolveDefaultRuntimeConfig","asPartial","t","resolveRuntimeExtensions","runtimeConfig","extensions","extensionConfiguration","forEach","extension","configure"],"sources":["/Users/shashanktayal/Projects/bigass/frontend/node_modules/@aws-sdk/client-s3/dist-es/runtimeExtensions.js"],"sourcesContent":["import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n    };\n};\n"],"mappings":"AAAA,SAASA,kCAAkC,EAAEC,sCAAsC,QAAS,iCAAiC;AAC7H,SAASC,oCAAoC,EAAEC,+BAA+B,QAAQ,uBAAuB;AAC7G,SAASC,gCAAgC,EAAEC,2BAA2B,QAAQ,uBAAuB;AACrG,MAAMC,SAAS,GAAIC,CAAC,IAAKA,CAAC;AAC1B,OAAO,MAAMC,wBAAwB,GAAGA,CAACC,aAAa,EAAEC,UAAU,KAAK;EACnE,MAAMC,sBAAsB,GAAG;IAC3B,GAAGL,SAAS,CAACN,kCAAkC,CAACS,aAAa,CAAC,CAAC;IAC/D,GAAGH,SAAS,CAACF,gCAAgC,CAACK,aAAa,CAAC,CAAC;IAC7D,GAAGH,SAAS,CAACJ,oCAAoC,CAACO,aAAa,CAAC;EACpE,CAAC;EACDC,UAAU,CAACE,OAAO,CAAEC,SAAS,IAAKA,SAAS,CAACC,SAAS,CAACH,sBAAsB,CAAC,CAAC;EAC9E,OAAO;IACH,GAAGF,aAAa;IAChB,GAAGR,sCAAsC,CAACU,sBAAsB,CAAC;IACjE,GAAGN,2BAA2B,CAACM,sBAAsB,CAAC;IACtD,GAAGR,+BAA+B,CAACQ,sBAAsB;EAC7D,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}