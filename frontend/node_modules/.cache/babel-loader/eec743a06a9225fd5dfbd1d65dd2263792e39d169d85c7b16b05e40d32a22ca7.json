{"ast":null,"code":"const stringPad = require('./stringPad');\n\n/**\n * @description A semVer like string, x.y.z or x.y is allowed\n *              Reverses the version positions, x.y.z turns to z.y.x\n *              Pads each segment with '0' so they have length of 2\n *              Example: 1.2.3 -> 03.02.01\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of zz.yy.xx (\n */\nmodule.exports = semVer => {\n  if (semVer.split('.').length < 2) {\n    throw new Error('invalid semVer, must have at least two segments');\n  }\n\n  // Split by '.', reverse, create new array with padded values and concat it together\n  return semVer.split('.').reverse().map(segment => {\n    return stringPad(segment, 2, '0');\n  }).join('.');\n};","map":{"version":3,"names":["stringPad","require","module","exports","semVer","split","length","Error","reverse","map","segment","join"],"sources":["/Users/shashanktayal/Projects/bigass/frontend/node_modules/cloudinary/lib/utils/analytics/reverseVersion.js"],"sourcesContent":["const stringPad = require('./stringPad');\n\n/**\n * @description A semVer like string, x.y.z or x.y is allowed\n *              Reverses the version positions, x.y.z turns to z.y.x\n *              Pads each segment with '0' so they have length of 2\n *              Example: 1.2.3 -> 03.02.01\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of zz.yy.xx (\n */\nmodule.exports = (semVer) => {\n  if (semVer.split('.').length < 2) {\n    throw new Error('invalid semVer, must have at least two segments');\n  }\n\n  // Split by '.', reverse, create new array with padded values and concat it together\n  return semVer.split('.').reverse().map((segment) => {\n    return stringPad(segment, 2, '0');\n  }).join('.');\n};\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAIC,MAAM,IAAK;EAC3B,IAAIA,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;IAChC,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACpE;;EAEA;EACA,OAAOH,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACG,OAAO,CAAC,CAAC,CAACC,GAAG,CAAEC,OAAO,IAAK;IAClD,OAAOV,SAAS,CAACU,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC;EACnC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}