{"ast":null,"code":"var _jsxFileName = \"/Users/shashanktayal/Projects/bigass/frontend/src/components/selectState.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport { RegionDropdown } from \"react-country-region-selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryStateSelector = props => {\n  _s();\n  const [region, setRegion] = useState(\"\");\n  const regions = RegionDropdown.getRegions(props.country).map(region => ({\n    label: region,\n    value: region\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      options: regions,\n      value: regions.find(option => option.value === region),\n      onChange: item => setRegion(item.value),\n      placeholder: \"Select Region\",\n      isDisabled: !props.country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryStateSelector, \"h0vxuLYuODwBupoD0bWJyc2Oim0=\");\n_c = CountryStateSelector;\nexport default CountryStateSelector;\nvar _c;\n$RefreshReg$(_c, \"CountryStateSelector\");","map":{"version":3,"names":["React","useState","Select","RegionDropdown","jsxDEV","_jsxDEV","CountryStateSelector","props","_s","region","setRegion","regions","getRegions","country","map","label","value","children","options","find","option","onChange","item","placeholder","isDisabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashanktayal/Projects/bigass/frontend/src/components/selectState.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport { RegionDropdown } from \"react-country-region-selector\";\n\nconst CountryStateSelector = (props) => {\n  const [region, setRegion] = useState(\"\");\n\n  const regions = RegionDropdown.getRegions(props.country).map((region) => ({\n    label: region,\n    value: region,\n  }));\n\n  return (\n    <div>\n      <Select\n        options={regions}\n        value={regions.find((option) => option.value === region)}\n        onChange={(item) => setRegion(item.value)}\n        placeholder=\"Select Region\"\n        isDisabled={!props.country}\n      />\n    </div>\n  );\n};\n\nexport default CountryStateSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,cAAc,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,OAAO,GAAGR,cAAc,CAACS,UAAU,CAACL,KAAK,CAACM,OAAO,CAAC,CAACC,GAAG,CAAEL,MAAM,KAAM;IACxEM,KAAK,EAAEN,MAAM;IACbO,KAAK,EAAEP;EACT,CAAC,CAAC,CAAC;EAEH,oBACEJ,OAAA;IAAAY,QAAA,eACEZ,OAAA,CAACH,MAAM;MACLgB,OAAO,EAAEP,OAAQ;MACjBK,KAAK,EAAEL,OAAO,CAACQ,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACJ,KAAK,KAAKP,MAAM,CAAE;MACzDY,QAAQ,EAAGC,IAAI,IAAKZ,SAAS,CAACY,IAAI,CAACN,KAAK,CAAE;MAC1CO,WAAW,EAAC,eAAe;MAC3BC,UAAU,EAAE,CAACjB,KAAK,CAACM;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnBIF,oBAAoB;AAAAuB,EAAA,GAApBvB,oBAAoB;AAqB1B,eAAeA,oBAAoB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}