{"ast":null,"code":"var _jsxFileName = \"/Users/shashanktayal/Projects/bigass/frontend/src/components/selectCountry.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Select from \"react-select\";\nimport { CountryDropdown } from \"react-country-region-selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryStateSelector = () => {\n  _s();\n  const [country, setCountry] = useState(\"\");\n  const countries = CountryDropdown.getAllCountries().map(country => ({\n    label: country,\n    value: country\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      options: countries,\n      value: countries.find(option => option.value === country),\n      onChange: item => setCountry(item.value),\n      placeholder: \"Select Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryStateSelector, \"57wSl0D2OYpiOrvnunbC6wPJe7w=\");\n_c = CountryStateSelector;\nexport default CountryStateSelector;\nvar _c;\n$RefreshReg$(_c, \"CountryStateSelector\");","map":{"version":3,"names":["useState","Select","CountryDropdown","jsxDEV","_jsxDEV","CountryStateSelector","_s","country","setCountry","countries","getAllCountries","map","label","value","children","options","find","option","onChange","item","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashanktayal/Projects/bigass/frontend/src/components/selectCountry.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport Select from \"react-select\";\nimport { CountryDropdown } from \"react-country-region-selector\";\n\nconst CountryStateSelector = () => {\n  const [country, setCountry] = useState(\"\");\n\n  const countries = CountryDropdown.getAllCountries().map((country) => ({\n    label: country,\n    value: country,\n  }));\n\n  return (\n    <div>\n      <Select\n        options={countries}\n        value={countries.find((option) => option.value === country)}\n        onChange={(item) => setCountry(item.value)}\n        placeholder=\"Select Country\"\n      />\n    </div>\n  );\n};\n\nexport default CountryStateSelector;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,eAAe,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,SAAS,GAAGP,eAAe,CAACQ,eAAe,CAAC,CAAC,CAACC,GAAG,CAAEJ,OAAO,KAAM;IACpEK,KAAK,EAAEL,OAAO;IACdM,KAAK,EAAEN;EACT,CAAC,CAAC,CAAC;EAEH,oBACEH,OAAA;IAAAU,QAAA,eACEV,OAAA,CAACH,MAAM;MACLc,OAAO,EAAEN,SAAU;MACnBI,KAAK,EAAEJ,SAAS,CAACO,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACJ,KAAK,KAAKN,OAAO,CAAE;MAC5DW,QAAQ,EAAGC,IAAI,IAAKX,UAAU,CAACW,IAAI,CAACN,KAAK,CAAE;MAC3CO,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlBID,oBAAoB;AAAAoB,EAAA,GAApBpB,oBAAoB;AAoB1B,eAAeA,oBAAoB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}