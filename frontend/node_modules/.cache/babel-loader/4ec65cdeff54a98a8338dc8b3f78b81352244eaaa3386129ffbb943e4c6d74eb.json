{"ast":null,"code":"var _jsxFileName = \"/Users/shashanktayal/Projects/bigass/frontend/src/components/selectCountry.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Country } from \"country-state-city\";\nimport Select from \"./select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectCountry(props) {\n  _s();\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    setCountries(Country.getAllCountries());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    name: props.name,\n    value: props.value,\n    onChange: e => {\n      props.onChange(e);\n      props.setCountry(e.target.value);\n    },\n    placeholder: props.placeholder,\n    options: countries.map(option => ({\n      ...option,\n      name: option.isoCode,\n      value: option.value\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectCountry, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = SelectCountry;\nexport default SelectCountry;\nvar _c;\n$RefreshReg$(_c, \"SelectCountry\");","map":{"version":3,"names":["useState","useEffect","Country","Select","jsxDEV","_jsxDEV","SelectCountry","props","_s","countries","setCountries","getAllCountries","name","value","onChange","e","setCountry","target","placeholder","options","map","option","isoCode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashanktayal/Projects/bigass/frontend/src/components/selectCountry.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Country } from \"country-state-city\";\nimport Select from \"./select\";\n\nfunction SelectCountry(props) {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    setCountries(Country.getAllCountries());\n  }, []);\n\n  return (\n    <Select\n      name={props.name}\n      value={props.value}\n      onChange={(e) => {\n        props.onChange(e);\n        props.setCountry(e.target.value);\n      }}\n      placeholder={props.placeholder}\n      options={countries.map((option) => ({\n        ...option,\n        name: option.isoCode,\n        value: option.value,\n      }))}\n    />\n  );\n}\n\nexport default SelectCountry;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdS,YAAY,CAACR,OAAO,CAACS,eAAe,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACF,MAAM;IACLS,IAAI,EAAEL,KAAK,CAACK,IAAK;IACjBC,KAAK,EAAEN,KAAK,CAACM,KAAM;IACnBC,QAAQ,EAAGC,CAAC,IAAK;MACfR,KAAK,CAACO,QAAQ,CAACC,CAAC,CAAC;MACjBR,KAAK,CAACS,UAAU,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;IAClC,CAAE;IACFK,WAAW,EAAEX,KAAK,CAACW,WAAY;IAC/BC,OAAO,EAAEV,SAAS,CAACW,GAAG,CAAEC,MAAM,KAAM;MAClC,GAAGA,MAAM;MACTT,IAAI,EAAES,MAAM,CAACC,OAAO;MACpBT,KAAK,EAAEQ,MAAM,CAACR;IAChB,CAAC,CAAC;EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEN;AAAClB,EAAA,CAvBQF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAyBtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}