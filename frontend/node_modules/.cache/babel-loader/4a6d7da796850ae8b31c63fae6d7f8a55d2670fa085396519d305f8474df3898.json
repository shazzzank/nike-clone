{"ast":null,"code":"export const regionRedirectEndpointMiddleware = config => {\n  return (next, context) => async args => {\n    const originalRegion = await config.region();\n    const regionProviderRef = config.region;\n    if (context.__s3RegionRedirect) {\n      config.region = async () => {\n        config.region = regionProviderRef;\n        return context.__s3RegionRedirect;\n      };\n    }\n    const result = await next(args);\n    if (context.__s3RegionRedirect) {\n      const region = await config.region();\n      if (originalRegion !== region) {\n        throw new Error(\"Region was not restored following S3 region redirect.\");\n      }\n    }\n    return result;\n  };\n};\nexport const regionRedirectEndpointMiddlewareOptions = {\n  tags: [\"REGION_REDIRECT\", \"S3\"],\n  name: \"regionRedirectEndpointMiddleware\",\n  override: true,\n  relation: \"before\",\n  toMiddleware: \"endpointV2Middleware\"\n};","map":{"version":3,"names":["regionRedirectEndpointMiddleware","config","next","context","args","originalRegion","region","regionProviderRef","__s3RegionRedirect","result","Error","regionRedirectEndpointMiddlewareOptions","tags","name","override","relation","toMiddleware"],"sources":["/Users/shashanktayal/Projects/bigass/frontend/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/region-redirect-endpoint-middleware.js"],"sourcesContent":["export const regionRedirectEndpointMiddleware = (config) => {\n    return (next, context) => async (args) => {\n        const originalRegion = await config.region();\n        const regionProviderRef = config.region;\n        if (context.__s3RegionRedirect) {\n            config.region = async () => {\n                config.region = regionProviderRef;\n                return context.__s3RegionRedirect;\n            };\n        }\n        const result = await next(args);\n        if (context.__s3RegionRedirect) {\n            const region = await config.region();\n            if (originalRegion !== region) {\n                throw new Error(\"Region was not restored following S3 region redirect.\");\n            }\n        }\n        return result;\n    };\n};\nexport const regionRedirectEndpointMiddlewareOptions = {\n    tags: [\"REGION_REDIRECT\", \"S3\"],\n    name: \"regionRedirectEndpointMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: \"endpointV2Middleware\",\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gCAAgC,GAAIC,MAAM,IAAK;EACxD,OAAO,CAACC,IAAI,EAAEC,OAAO,KAAK,MAAOC,IAAI,IAAK;IACtC,MAAMC,cAAc,GAAG,MAAMJ,MAAM,CAACK,MAAM,CAAC,CAAC;IAC5C,MAAMC,iBAAiB,GAAGN,MAAM,CAACK,MAAM;IACvC,IAAIH,OAAO,CAACK,kBAAkB,EAAE;MAC5BP,MAAM,CAACK,MAAM,GAAG,YAAY;QACxBL,MAAM,CAACK,MAAM,GAAGC,iBAAiB;QACjC,OAAOJ,OAAO,CAACK,kBAAkB;MACrC,CAAC;IACL;IACA,MAAMC,MAAM,GAAG,MAAMP,IAAI,CAACE,IAAI,CAAC;IAC/B,IAAID,OAAO,CAACK,kBAAkB,EAAE;MAC5B,MAAMF,MAAM,GAAG,MAAML,MAAM,CAACK,MAAM,CAAC,CAAC;MACpC,IAAID,cAAc,KAAKC,MAAM,EAAE;QAC3B,MAAM,IAAII,KAAK,CAAC,uDAAuD,CAAC;MAC5E;IACJ;IACA,OAAOD,MAAM;EACjB,CAAC;AACL,CAAC;AACD,OAAO,MAAME,uCAAuC,GAAG;EACnDC,IAAI,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC;EAC/BC,IAAI,EAAE,kCAAkC;EACxCC,QAAQ,EAAE,IAAI;EACdC,QAAQ,EAAE,QAAQ;EAClBC,YAAY,EAAE;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}