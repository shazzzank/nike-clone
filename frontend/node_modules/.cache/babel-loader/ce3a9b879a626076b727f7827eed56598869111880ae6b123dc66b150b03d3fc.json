{"ast":null,"code":"const api = require('./api');\nconst config = require('../config');\nconst {\n  isEmpty,\n  isNumber,\n  compute_hash,\n  build_distribution_domain,\n  clear_blank,\n  sort_object_by_key\n} = require('../utils');\nconst {\n  base64Encode\n} = require('../utils/encoding/base64Encode');\nconst Search = class Search {\n  constructor() {\n    this.query_hash = {\n      sort_by: [],\n      aggregate: [],\n      with_field: [],\n      fields: []\n    };\n    this._ttl = 300;\n  }\n  static instance() {\n    return new Search();\n  }\n  static expression(value) {\n    return this.instance().expression(value);\n  }\n  static max_results(value) {\n    return this.instance().max_results(value);\n  }\n  static next_cursor(value) {\n    return this.instance().next_cursor(value);\n  }\n  static aggregate(value) {\n    return this.instance().aggregate(value);\n  }\n  static with_field(value) {\n    return this.instance().with_field(value);\n  }\n  static fields(value) {\n    return this.instance().fields(value);\n  }\n  static sort_by(field_name, dir = 'asc') {\n    return this.instance().sort_by(field_name, dir);\n  }\n  static ttl(newTtl) {\n    return this.instance().ttl(newTtl);\n  }\n  static execute(options, callback) {\n    return this.instance().execute(options, callback);\n  }\n  expression(value) {\n    this.query_hash.expression = value;\n    return this;\n  }\n  max_results(value) {\n    this.query_hash.max_results = value;\n    return this;\n  }\n  next_cursor(value) {\n    this.query_hash.next_cursor = value;\n    return this;\n  }\n  aggregate(value) {\n    const found = this.query_hash.aggregate.find(v => v === value);\n    if (!found) {\n      this.query_hash.aggregate.push(value);\n    }\n    return this;\n  }\n  with_field(value) {\n    if (Array.isArray(value)) {\n      this.query_hash.with_field = this.query_hash.with_field.concat(value);\n    } else {\n      this.query_hash.with_field.push(value);\n    }\n    this.query_hash.with_field = Array.from(new Set(this.query_hash.with_field));\n    return this;\n  }\n  fields(value) {\n    if (Array.isArray(value)) {\n      this.query_hash.fields = this.query_hash.fields.concat(value);\n    } else {\n      this.query_hash.fields.push(value);\n    }\n    this.query_hash.fields = Array.from(new Set(this.query_hash.fields));\n    return this;\n  }\n  sort_by(field_name, dir = \"desc\") {\n    let sort_bucket;\n    sort_bucket = {};\n    sort_bucket[field_name] = dir;\n\n    // Check if this field name is already stored in the hash\n    const previously_sorted_obj = this.query_hash.sort_by.find(sort_by => sort_by[field_name]);\n\n    // Since objects are references in Javascript, we can update the reference we found\n    // For example,\n    if (previously_sorted_obj) {\n      previously_sorted_obj[field_name] = dir;\n    } else {\n      this.query_hash.sort_by.push(sort_bucket);\n    }\n    return this;\n  }\n  ttl(newTtl) {\n    if (isNumber(newTtl)) {\n      this._ttl = newTtl;\n      return this;\n    }\n    throw new Error('New TTL value has to be a Number.');\n  }\n  to_query() {\n    Object.keys(this.query_hash).forEach(k => {\n      let v = this.query_hash[k];\n      if (!isNumber(v) && isEmpty(v)) {\n        delete this.query_hash[k];\n      }\n    });\n    return this.query_hash;\n  }\n  execute(options, callback) {\n    if (callback === null) {\n      callback = options;\n    }\n    options = options || {};\n    return api.search(this.to_query(), options, callback);\n  }\n  to_url(ttl, next_cursor, options = {}) {\n    const apiSecret = 'api_secret' in options ? options.api_secret : config().api_secret;\n    if (!apiSecret) {\n      throw new Error('Must supply api_secret');\n    }\n    const urlTtl = ttl || this._ttl;\n    const query = this.to_query();\n    let urlCursor = next_cursor;\n    if (query.next_cursor && !next_cursor) {\n      urlCursor = query.next_cursor;\n    }\n    delete query.next_cursor;\n    const dataOrderedByKey = sort_object_by_key(clear_blank(query));\n    const encodedQuery = base64Encode(JSON.stringify(dataOrderedByKey));\n    const urlPrefix = build_distribution_domain(options.source, options);\n    const signature = compute_hash(`${urlTtl}${encodedQuery}${apiSecret}`, 'sha256', 'hex');\n    const urlWithoutCursor = `${urlPrefix}/search/${signature}/${urlTtl}/${encodedQuery}`;\n    return urlCursor ? `${urlWithoutCursor}/${urlCursor}` : urlWithoutCursor;\n  }\n};\nmodule.exports = Search;","map":{"version":3,"names":["api","require","config","isEmpty","isNumber","compute_hash","build_distribution_domain","clear_blank","sort_object_by_key","base64Encode","Search","constructor","query_hash","sort_by","aggregate","with_field","fields","_ttl","instance","expression","value","max_results","next_cursor","field_name","dir","ttl","newTtl","execute","options","callback","found","find","v","push","Array","isArray","concat","from","Set","sort_bucket","previously_sorted_obj","Error","to_query","Object","keys","forEach","k","search","to_url","apiSecret","api_secret","urlTtl","query","urlCursor","dataOrderedByKey","encodedQuery","JSON","stringify","urlPrefix","source","signature","urlWithoutCursor","module","exports"],"sources":["/Users/shashanktayal/Projects/bigass/frontend/node_modules/cloudinary/lib/v2/search.js"],"sourcesContent":["const api = require('./api');\nconst config = require('../config');\nconst {\n  isEmpty,\n  isNumber,\n  compute_hash,\n  build_distribution_domain,\n  clear_blank,\n  sort_object_by_key\n} = require('../utils');\nconst {base64Encode} = require('../utils/encoding/base64Encode');\n\nconst Search = class Search {\n  constructor() {\n    this.query_hash = {\n      sort_by: [],\n      aggregate: [],\n      with_field: [],\n      fields: []\n    };\n    this._ttl = 300;\n  }\n\n  static instance() {\n    return new Search();\n  }\n\n  static expression(value) {\n    return this.instance().expression(value);\n  }\n\n  static max_results(value) {\n    return this.instance().max_results(value);\n  }\n\n  static next_cursor(value) {\n    return this.instance().next_cursor(value);\n  }\n\n  static aggregate(value) {\n    return this.instance().aggregate(value);\n  }\n\n  static with_field(value) {\n    return this.instance().with_field(value);\n  }\n\n  static fields(value) {\n    return this.instance().fields(value);\n  }\n\n  static sort_by(field_name, dir = 'asc') {\n    return this.instance().sort_by(field_name, dir);\n  }\n\n  static ttl(newTtl) {\n    return this.instance().ttl(newTtl);\n  }\n\n  static execute(options, callback) {\n    return this.instance().execute(options, callback);\n  }\n\n  expression(value) {\n    this.query_hash.expression = value;\n    return this;\n  }\n\n  max_results(value) {\n    this.query_hash.max_results = value;\n    return this;\n  }\n\n  next_cursor(value) {\n    this.query_hash.next_cursor = value;\n    return this;\n  }\n\n  aggregate(value) {\n    const found = this.query_hash.aggregate.find(v => v === value);\n\n    if (!found) {\n      this.query_hash.aggregate.push(value);\n    }\n\n    return this;\n  }\n\n  with_field(value) {\n    if (Array.isArray(value)) {\n      this.query_hash.with_field = this.query_hash.with_field.concat(value);\n    } else {\n      this.query_hash.with_field.push(value);\n    }\n\n    this.query_hash.with_field = Array.from(new Set(this.query_hash.with_field));\n    return this;\n  }\n\n  fields(value) {\n    if (Array.isArray(value)) {\n      this.query_hash.fields = this.query_hash.fields.concat(value);\n    } else {\n      this.query_hash.fields.push(value);\n    }\n\n    this.query_hash.fields = Array.from(new Set(this.query_hash.fields));\n    return this;\n  }\n\n  sort_by(field_name, dir = \"desc\") {\n    let sort_bucket;\n    sort_bucket = {};\n    sort_bucket[field_name] = dir;\n\n    // Check if this field name is already stored in the hash\n    const previously_sorted_obj = this.query_hash.sort_by.find((sort_by) => sort_by[field_name]);\n\n    // Since objects are references in Javascript, we can update the reference we found\n    // For example,\n    if (previously_sorted_obj) {\n      previously_sorted_obj[field_name] = dir;\n    } else {\n      this.query_hash.sort_by.push(sort_bucket);\n    }\n\n    return this;\n  }\n\n  ttl(newTtl) {\n    if (isNumber(newTtl)) {\n      this._ttl = newTtl;\n      return this;\n    }\n\n    throw new Error('New TTL value has to be a Number.');\n  }\n\n  to_query() {\n    Object.keys(this.query_hash).forEach((k) => {\n      let v = this.query_hash[k];\n      if (!isNumber(v) && isEmpty(v)) {\n        delete this.query_hash[k];\n      }\n    });\n    return this.query_hash;\n  }\n\n  execute(options, callback) {\n    if (callback === null) {\n      callback = options;\n    }\n    options = options || {};\n    return api.search(this.to_query(), options, callback);\n  }\n\n  to_url(ttl, next_cursor, options = {}) {\n    const apiSecret = 'api_secret' in options ? options.api_secret : config().api_secret;\n    if (!apiSecret) {\n      throw new Error('Must supply api_secret');\n    }\n\n    const urlTtl = ttl || this._ttl;\n\n    const query = this.to_query();\n\n    let urlCursor = next_cursor;\n    if (query.next_cursor && !next_cursor) {\n      urlCursor = query.next_cursor;\n    }\n    delete query.next_cursor;\n\n    const dataOrderedByKey = sort_object_by_key(clear_blank(query));\n    const encodedQuery = base64Encode(JSON.stringify(dataOrderedByKey));\n\n    const urlPrefix = build_distribution_domain(options.source, options);\n\n    const signature = compute_hash(`${urlTtl}${encodedQuery}${apiSecret}`, 'sha256', 'hex');\n\n    const urlWithoutCursor = `${urlPrefix}/search/${signature}/${urlTtl}/${encodedQuery}`;\n    return urlCursor ? `${urlWithoutCursor}/${urlCursor}` : urlWithoutCursor;\n  }\n};\n\nmodule.exports = Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}